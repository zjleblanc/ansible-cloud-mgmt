---
- name: Add disk space to EC2 instance
  hosts: localhost
  gather_facts: false
  tags: expand_disk

  vars:
    ansible_python_interpreter: /usr/bin/python3

  environment:
    AWS_REGION: "{{ _aws_region | default('us-east-1') }}"

  tasks:
    - name: Update state of incident
      when: incident_sys_id is defined
      tags: snow
      servicenow.itsm.incident:
        sys_id: "{{ incident_sys_id }}"
        state: in_progress

    - name: Gather information about a particular instance using ID
      register: r_instance_info
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ _host }}"
          instance-state-name: ["running"]

    - name: Determine platform
      ansible.builtin.set_fact:
        host_platform: "{{ hostvars[_host]['platform_details'] | default('unknown') | lower }}"

    - name: Resize volume | RHEL
      when: host_platform is search('red hat')
      ansible.builtin.include_tasks: tasks/resize_vol_rhel.yml

    - name: Resize volume | Windows
      when: host_platform is search('windows')
      ansible.builtin.include_tasks: tasks/resize_vol_windows.yml

- name: Expand the filesystem
  hosts: ec2_post_reboot
  gather_facts: false
  tags: expand_fs

  tasks:
    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:
        timeout: "{{ reboot_timeout | default(300) }}"

    - name: Resize drive to max available size
      when: host_platform is search('windows')
      community.windows.win_partition:
        drive_letter: C
        partition_size: -1

    - name: Gather facts
      ansible.builtin.setup:
        gather_subset:
          - devices
          - mounts

    - name: Add facts to incident
      when: incident_sys_id is defined
      tags: snow
      block:
        - name: Add df results post remediation
          when: host_platform is search('red hat')
          vars:
            df_comment_header: After Remediation
          ansible.builtin.include_tasks: tasks/capture_df_results.yml

        - name: Setup attachment files
          delegate_to: localhost
          ansible.builtin.set_fact:
            attachment_files:
              - path: /tmp/ansible_facts.json
                data: "{{ ansible_facts | to_nice_json }}"

        - name: Create attachments
          delegate_to: localhost
          loop: "{{ attachment_files }}"
          ansible.builtin.copy:
            content: "{{ item.data }}"
            dest: "{{ item.path }}"
            mode: 0755

        - name: Add facts to incident
          delegate_to: localhost
          servicenow.itsm.incident:
            sys_id: "{{ incident_sys_id }}"
            attachments: "{{ attachment_files | json_query('[].{path: path}') }}"

        - name: Set state to closed
          ansible.builtin.set_stats:
            data:
              incident_state: closed
              close_notes: Dynatrace + Event-Driven Ansible auto-remediation successful
