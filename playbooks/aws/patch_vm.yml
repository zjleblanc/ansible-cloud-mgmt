---
- name: Patch ec2
  hosts: "{{ _hosts | default('omit') }}"
  gather_facts: true
  become: true

  tasks:
    - name: Create change request
      tags: snow
      register: r_chg_req
      delegate_to: localhost
      run_once: true
      servicenow.itsm.change_request:
        type: standard
        state: new
        requested_by: zleblanc
        short_description: Patch EC2s
        description: "Affected hosts: {{ ','.join(ansible_play_hosts) }}"
        category: system_software
        priority: moderate
        risk: low
        impact: low

    - name: Update change request status
      tags: snow
      delegate_to: localhost
      run_once: true
      servicenow.itsm.change_request:
        number: "{{ r_chg_req.record.number }}"
        state: scheduled
        assignment_group: Ansible West Tigers

    - name: Update change request status
      tags: snow
      delegate_to: localhost
      run_once: true
      servicenow.itsm.change_request:
        number: "{{ r_chg_req.record.number }}"
        state: implement

    - name: Create a change task
      tags: snow
      delegate_to: localhost
      register: r_chg_task
      servicenow.itsm.change_request_task:
        configuration_item: "{{ inventory_hostname }}"
        change_request_number: "{{ r_chg_req.record.number }}"
        type: implementation
        state: open
        assigned_to: zleblanc
        short_description: "patching {{ inventory_hostname }}"
        description: "starting patch @ {{ ansible_date_time.iso8601 }}"
        planned_start_date: "{{ lookup('pipe', 'date +\"%Y%m%d %H:%M:%S\"') }}"
        planned_end_date: "{{ lookup('pipe', 'date -d \"+30 minutes\" +\"%Y%m%d %H:%M:%S\"') }}"
        other:
          approval: approved
      
    - name: Patch VM
      block:
        - name: Wait for connection (3m)
          ansible.builtin.wait_for_connection:
            timeout: 180

        - name: Apply patches based on platform
          ansible.builtin.include_tasks:
            file: tasks/patch_ec2.yml
      rescue:
        - name: Handle patch failure
          ansible.builtin.set_fact:
            patch_failed: true

        - name: Close a change task | unsuccessful
          tags: snow
          delegate_to: localhost
          servicenow.itsm.change_request_task:
            number: "{{ r_chg_task.record.number }}"
            state: closed
            close_code: unsuccessful
            close_notes: "Automated patching failed: {{ awx_job_template_name }} (id: {{ awx_job_id }})"

        - name: Update change request status | on hold
          tags: snow
          delegate_to: localhost
          run_once: true
          servicenow.itsm.change_request:
            number: "{{ r_chg_req.record.number }}"
            on_hold: true
            hold_reason: "Patch failed, see {{ r_chg_task.record.number }}"

        - name: Fail playbook
          ansible.builtin.assert:
            that: false
            fail_msg: "Patch failed, see {{ r_chg_task.record.number }}"
    
    - name: Patch succeeded
      when: not (patch_failed | default(false))
      block:
        - name: Close a change task | successful
          tags: snow
          delegate_to: localhost
          servicenow.itsm.change_request_task:
            number: "{{ r_chg_task.record.number }}"
            state: closed
            close_code: successful
            close_notes: "{{ patch_results | to_nice_yaml }}"

        - name: Update change request status | review
          tags: snow
          delegate_to: localhost
          run_once: true
          servicenow.itsm.change_request:
            number: "{{ r_chg_req.record.number }}"
            state: review

        - name: Close change request | successful
          tags: snow
          delegate_to: localhost
          run_once: true
          servicenow.itsm.change_request:
            number: "{{ r_chg_req.record.number }}"
            state: closed
            close_code: successful
            close_notes: Closed